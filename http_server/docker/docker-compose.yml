#version: '3.8'

services:
  katago-http:
    build:
      context: ../../
      dockerfile: http_server/docker/Dockerfile.http
    container_name: katago-http-server
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"  # 备用端口
    volumes:
      - ../configs/katago_http.cfg:/app/configs/katago_http.cfg:ro
      - ../../models:/app/models:ro
      - ../logs:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - KATAGO_CONFIG=/app/configs/katago_http.cfg
      - KATAGO_MODEL=/app/models/model.bin.gz
      - LOG_LEVEL=INFO
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - katago-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: katago-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../logs/nginx:/var/log/nginx
    depends_on:
      - katago-http
    networks:
      - katago-network
    profiles:
      - with-nginx

  # 可选：监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: katago-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - katago-network
    profiles:
      - with-monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: katago-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - katago-network
    profiles:
      - with-monitoring

networks:
  katago-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data: